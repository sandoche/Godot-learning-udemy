[gd_scene load_steps=7 format=2]

[ext_resource path="res://Lightmaps/Torch.tscn" type="PackedScene" id=1]
[ext_resource path="res://GFX/PNG/Tiles/tile_536.png" type="Texture" id=2]
[ext_resource path="res://GFX/PNG/Tiles/tile_463.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends \"res://Characters/TemplateCharacter.gd\"

# FOV = Field of view
# LOS = Line of sight

const FOV_TOLERANCE = 20
const MAX_DETECTION_RANGE = 640
const RED = Color(1,0.25,0.25) 
const WHITE = Color(1,1,1)

var Player

func _ready():
	# Search node by name
	Player = get_node(\"/root\").find_node(\"Player\", true, false)
	
func _process(delta):
	if Player_in_FOV() and Player_in_LOS():
		$Torch.color = RED
	else:
		$Torch.color = WHITE
		
func Player_in_FOV():
	var npc_facing_direction = Vector2(1,0).rotated(global_rotation)
	var direction_to_Player = (Player.position - global_position).normalized()
	
	if abs(direction_to_Player.angle_to(npc_facing_direction)) < deg2rad(FOV_TOLERANCE):
		return true
	else:
		return false

func Player_in_LOS():
	var space = get_world_2d().direct_space_state
	var LOS_obstacle = space.intersect_ray(global_position, Player.global_position, [self], collision_mask)
	
	if not LOS_obstacle:
		return false
	
	var distance_to_player = Player.global_position.distance_to(global_position)
	var Player_in_range = distance_to_player < MAX_DETECTION_RANGE
	
	if LOS_obstacle.collider == Player && Player_in_range:
		return true
	else:
		return false
	
"

[sub_resource type="RectangleShape2D" id=2]

[sub_resource type="Animation" id=3]
length = 12.0
loop = true
step = 1.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2, 6, 8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ -30.0, -30.0, 30.0, 30.0 ]
}

[node name="Camera" type="Node2D"]

[node name="ArmSprite" type="Sprite" parent="."]
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 3 )

[node name="CameraBody" type="KinematicBody2D" parent="."]
position = Vector2( 8.09361, 0 )
rotation = -0.523599
collision_layer = 4
collision_mask = 3
script = SubResource( 1 )
__meta__ = {
"_edit_group_": true
}

[node name="Torch" parent="CameraBody" instance=ExtResource( 1 )]
position = Vector2( 7.85007, 0 )
shadow_enabled = true

[node name="Sprite" type="Sprite" parent="CameraBody"]
position = Vector2( 0.613189, 0 )
rotation = 1.5708
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="CameraBody"]
visible = false
shape = SubResource( 2 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="CameraBody"]
autoplay = "CameraRotation"
anims/CameraRotation = SubResource( 3 )
